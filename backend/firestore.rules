rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to validate article data
    function isValidArticle() {
      let data = request.resource.data;
      return data.keys().hasAll(['title', 'content', 'author', 'thumbnailURL', 'isFavorite', 'publishedAt', 'createdAt', 'updatedAt'])
        && data.title is string && data.title.size() > 0 && data.title.size() <= 200
        && data.content is string && data.content.size() > 0
        && data.author is string && data.author.size() > 0 && data.author.size() <= 100
        && data.thumbnailURL is string && data.thumbnailURL.size() > 0
        && data.isFavorite is bool
        && data.publishedAt is timestamp
        && data.createdAt is timestamp
        && data.updatedAt is timestamp;
    }

    // Articles collection rules
    match /articles/{articleId} {
      // Allow anyone to read articles
      allow read: if true;

      // Allow anyone to create articles (for now - you can add authentication later)
      // When creating, ensure all required fields are present and valid
      allow create: if isValidArticle();

      // Allow updates only if article data is valid
      allow update: if isValidArticle();

      // Allow deletions (you can restrict this later)
      allow delete: if true;
    }

    // Users collection rules
    match /users/{userId} {
      // Allow users to read their own user document
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow users to create/update their own user document
      allow create, update: if request.auth != null && request.auth.uid == userId;

      // Favorites subcollection - user-specific bookmarks
      match /favorites/{articleId} {
        // Allow users to read/write only their own favorites
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
  }
}